[
    {
        "title": "Anagram Checker",
        "language": "Java",
        "difficulty": "Medium",
        "description": "Write a program that checks if two strings are anagrams.",
        "examples": [
            "Input: areAnagrams('listen', 'silent')",
            "Output: true"
        ],
        "expected_output": "true",
        "code_template": "public class AnagramChecker {\n    public static boolean areAnagrams(String str1, String str2) {\n        // your code here\n    }\n}"
    },
    {
        "title": "Palindrome Checker",
        "language": "Java",
        "difficulty": "Easy",
        "description": "Write a program that checks if a string is a palindrome.",
        "examples": [
            "Input: isPalindrome('racecar')",
            "Output: true"
        ],
        "expected_output": "true",
        "code_template": "public class PalindromeChecker {\n    public static boolean isPalindrome(String str) {\n        // your code here\n    }\n}"
    },
    {
        "title": "Prime Numbers",
        "language": "Java",
        "difficulty": "Hard",
        "description": "Write a program that returns all prime numbers up to a given number.",
        "examples": [
            "Input: getPrimes(10)",
            "Output: [2, 3, 5, 7]"
        ],
        "expected_output": "[2, 3, 5, 7]",
        "code_template": "import java.util.*;\npublic class PrimeNumbers {\n    public static List<Integer> getPrimes(int n) {\n        // your code here\n    }\n}"
    },
    {
        "title": "Fibonacci Sequence",
        "language": "Java",
        "difficulty": "Easy",
        "description": "Write a program that generates the first n numbers of the Fibonacci sequence.",
        "examples": [
            "Input: fibonacci(5)",
            "Output: [0, 1, 1, 2, 3]"
        ],
        "expected_output": "[0, 1, 1, 2, 3]",
        "code_template": "import java.util.*;\npublic class FibonacciSequence {\n    public static List<Integer> fibonacci(int n) {\n        // your code here\n    }\n}"
    },
    {
        "title": "Factorial Calculation",
        "language": "Java",
        "difficulty": "Medium",
        "description": "Write a program that calculates the factorial of a given number.",
        "examples": [
            "Input: factorial(5)",
            "Output: 120"
        ],
        "expected_output": "120",
        "code_template": "public class FactorialCalculation {\n    public static int factorial(int n) {\n        // your code here\n    }\n}"
    },
    {
        "title": "Bubble Sort",
        "language": "Java",
        "difficulty": "Medium",
        "description": "Implement the bubble sort algorithm to sort an array of integers.",
        "examples": [
            "Input: bubbleSort(new int[]{3, 1, 4, 1, 5})",
            "Output: [1, 1, 3, 4, 5]"
        ],
        "expected_output": "[1, 1, 3, 4, 5]",
        "code_template": "import java.util.*;\npublic class BubbleSort {\n    public static int[] bubbleSort(int[] arr) {\n        // your code here\n    }\n}"
    },
    {
        "title": "Binary Search",
        "language": "Java",
        "difficulty": "Hard",
        "description": "Implement the binary search algorithm to find an element in a sorted array.",
        "examples": [
            "Input: binarySearch(new int[]{1, 2, 3, 4, 5}, 3)",
            "Output: 2"
        ],
        "expected_output": "2",
        "code_template": "public class BinarySearch {\n    public static int binarySearch(int[] arr, int target) {\n        // your code here\n    }\n}"
    },
    {
        "title": "String Reversal",
        "language": "Java",
        "difficulty": "Easy",
        "description": "Write a program that reverses a given string.",
        "examples": [
            "Input: reverseString('hello')",
            "Output: 'olleh'"
        ],
        "expected_output": "'olleh'",
        "code_template": "public class StringReversal {\n    public static String reverseString(String str) {\n        // your code here\n    }\n}"
    },
    {
        "title": "Matrix Multiplication",
        "language": "Java",
        "difficulty": "Hard",
        "description": "Write a program that multiplies two matrices.",
        "examples": [
            "Input: multiplyMatrices(new int[][]{{1, 2}, {3, 4}}, new int[][]{{2, 0}, {1, 2}})",
            "Output: [[4, 4], [10, 8]]"
        ],
        "expected_output": "[[4, 4], [10, 8]]",
        "code_template": "import java.util.*;\npublic class MatrixMultiplication {\n    public static int[][] multiplyMatrices(int[][] matrix1, int[][] matrix2) {\n        // your code here\n    }\n}"
    }
]
